@import "./config.scss";
@import "../common/var.scss";

//混合 mixin .el-row BEM->b (block)
/*BEM*/
@mixin b($block) {
  //块
  $B: $namespace + "-" + $block;
  @at-root {
    .#{$B} {
      @content;
    }
  }
}
@mixin m($modifier) {
  //修饰符 scss Lists @each遍历
  $selector: &;
  $currentSelector: "";
  @each $unit in $modifier {
    $currentSelector: $currentSelector +
      $selector +
      $modifier--separator +
      $unit +
      ",";
  }
  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}
@mixin when($state) {
  //关于状态
  // $selector:&;
  // $currentState:$selector + '.'+ $state-prefix + $state;
  @at-root {
    // #{$currentState}{
    //   @content;
    // }
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}

//混合 minxin .el-col
//断点 (break points)
// const sm=768px;
// const md=992px;
// const lg=1200px;
// const xl=1920px;
// const breakPoints={
//   xs:(max-width:$--);
//   sm:(min-width:sm);
//   md:(min-width:md);
//   lg:(min-width:lg);
//   xl:(min-width:xl);
// }

@mixin res($key, $map: $--breakPoints) {
  @if map-has-key($map, $key) {
    @media only screen and #{inspect(map-get($map, $key))} {
      @content;
    }
  } @else {
    @warn "undefined points:`#{$map}`";
  }
}
